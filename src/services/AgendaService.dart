class AgendaService {
  // üîπ 1) Visualizar Agenda
  // Fluxo: O paciente pede para ver a agenda (visualizarAgenda).
  // O Sistema consulta a Agenda, obt√©m os hor√°rios e retorna para o paciente.
  // Fun√ß√£o: Permite ao paciente escolher um hor√°rio dispon√≠vel antes de tentar criar um agendamento.
  static void visualizarAgenda(int medicoId, DateTime data) {
    print('üìÖ Visualizando agenda do m√©dico ID: $medicoId para ${data.day}/${data.month}/${data.year}');
    print('Consultando banco de dados...');
    print('Hor√°rios ocupados: [09:00, 10:30, 14:00]');
    print('Hor√°rios dispon√≠veis: [08:00, 08:30, 09:30, 10:00, 11:00, 11:30, 13:00, 13:30, 14:30, 15:00, 15:30, 16:00, 16:30, 17:00, 17:30]');
  }

  // Verificar se um hor√°rio est√° dispon√≠vel
  static bool verificarDisponibilidade(int medicoId, DateTime dataHora) {
    print('Verificando disponibilidade do hor√°rio ${dataHora.hour}:${dataHora.minute.toString().padLeft(2, '0')}...');
    // Simula√ß√£o simples - sempre dispon√≠vel
    return true;
  }

  // Marcar hor√°rio como ocupado
  static void marcarHorario(int medicoId, DateTime dataHora) {
    print('‚è∞ Hor√°rio marcado: ${dataHora.hour}:${dataHora.minute.toString().padLeft(2, '0')} para m√©dico ID: $medicoId');
  }
}
